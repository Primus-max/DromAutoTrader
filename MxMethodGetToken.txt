  protected override async void  AuthorizationAsync()
  {
      string apiUrl = "https://api.mxgroup.ru/client/token";

      using HttpClient client = new HttpClient();
      client.DefaultRequestHeaders.Add("Authorization", "Basic b3pfZnJvbnRfcHJvZDpXcTFzZWZ1eG9qbkhpaW5HNmMyeThBQXl2cTBTSHJBQw==");
      client.DefaultRequestHeaders.Add("accept", "application/json");
      client.DefaultRequestHeaders.Add("accept-encoding", "gzip, deflate, br");
      client.DefaultRequestHeaders.Add("accept-language", "ru,en-US;q=0.9,en;q=0.8,ru-RU;q=0.7");
      client.DefaultRequestHeaders.Add("origin", "https://new.mxgroup.ru");
      client.DefaultRequestHeaders.Add("sec-ch-ua", "sec-ch-ua: \"Microsoft Edge\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"");
      client.DefaultRequestHeaders.Add("sec-ch-ua-mobile", "?0");
      client.DefaultRequestHeaders.Add("sec-ch-ua-platform", "\"Windows\"");
      client.DefaultRequestHeaders.Add("sec-fetch-mode", "cors");
      client.DefaultRequestHeaders.Add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0");

      try
      {
          // Тело запроса
          var payload = new
          {
              grant_type = "password",
              username = "krasikov98975rus@gmail.com",
              password = "H2A8AMZ757",
              sign = "",
              expires = 0
          };

          // Выполнение POST-запроса
          HttpResponseMessage response = await client.PostAsJsonAsync(apiUrl, payload);

          if (response.IsSuccessStatusCode)
          {
              // Преобразование ответа в строку с указанием кодировки
              string jsonResponse = await response.Content.ReadAsStringAsync();

              // Убираем экранирование из строки
              string unescapedJsonResponse = JsonConvert.DeserializeObject<string>($"\"{jsonResponse}\"");

              // Теперь у нас должна быть строка без экранирования
              Console.WriteLine(unescapedJsonResponse);

              // Теперь десериализуем строку JSON в объект AccessTokenModel
              AccessTokenModel result = JsonConvert.DeserializeObject<AccessTokenModel>(unescapedJsonResponse);

              // Теперь у вас есть доступ к свойствам AccessTokenModel
              Console.WriteLine($"Access Token: {result.access_token}");
          }
          else
          {
              Console.WriteLine($"Ошибка при запросе: {response.StatusCode}");
          }

      }
      catch (Exception ex)
      {
          Console.WriteLine($"Ошибка: {ex.Message}");
      }
  }