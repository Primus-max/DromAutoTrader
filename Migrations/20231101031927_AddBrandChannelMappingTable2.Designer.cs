// <auto-generated />
using System;
using DromAutoTrader.Data.Connection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DromAutoTrader.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20231101031927_AddBrandChannelMappingTable2")]
    partial class AddBrandChannelMappingTable2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("DromAutoTrader.Models.AdPublishingInfo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artikul")
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatePublished")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagesPath")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("InputPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KatalogName")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OutputPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PriceBuy")
                        .HasColumnType("TEXT");

                    b.Property<string>("PriceName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AdPublishingInfo", (string)null);
                });

            modelBuilder.Entity("DromAutoTrader.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultImage")
                        .HasColumnType("TEXT");

                    b.Property<string>("FindImageService")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("DromAutoTrader.Models.BrandChannelMapping", b =>
                {
                    b.Property<int>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id")
                        .HasColumnType("INTEGER");

                    b.HasIndex("BrandId");

                    b.HasIndex("ChannelId");

                    b.ToTable("BrandChannelMappings");
                });

            modelBuilder.Entity("DromAutoTrader.Models.BrandImageServiceMapping", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ImageServiceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BrandImageServiceMappings");
                });

            modelBuilder.Entity("DromAutoTrader.Models.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("DromAutoTrader.Models.ImageService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BrandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("ImageServices");
                });

            modelBuilder.Entity("DromAutoTrader.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DromAutoTrader.Models.TablePriceOfIncrease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("From")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PriceIncrease")
                        .HasColumnType("INTEGER");

                    b.Property<int>("To")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChannelId");

                    b.ToTable("TablePriceOfIncreases");
                });

            modelBuilder.Entity("DromAutoTrader.Prices.PublishedPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artikul")
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DatePublished")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InputPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KatalogName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OutputPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceBuy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PublishedPrices");
                });

            modelBuilder.Entity("DromAutoTrader.Models.Brand", b =>
                {
                    b.HasOne("DromAutoTrader.Models.Channel", null)
                        .WithMany("Brands")
                        .HasForeignKey("ChannelId");
                });

            modelBuilder.Entity("DromAutoTrader.Models.BrandChannelMapping", b =>
                {
                    b.HasOne("DromAutoTrader.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DromAutoTrader.Models.Channel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("DromAutoTrader.Models.ImageService", b =>
                {
                    b.HasOne("DromAutoTrader.Models.Brand", null)
                        .WithMany("ImageServices")
                        .HasForeignKey("BrandId");
                });

            modelBuilder.Entity("DromAutoTrader.Models.TablePriceOfIncrease", b =>
                {
                    b.HasOne("DromAutoTrader.Models.Channel", null)
                        .WithMany("PriceIncreases")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DromAutoTrader.Models.Brand", b =>
                {
                    b.Navigation("ImageServices");
                });

            modelBuilder.Entity("DromAutoTrader.Models.Channel", b =>
                {
                    b.Navigation("Brands");

                    b.Navigation("PriceIncreases");
                });
#pragma warning restore 612, 618
        }
    }
}
